{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","utils/useQuery.js","layout/ErrorAlert.js","reservations/ReservationCancel.js","reservations/ReservationsList.js","tables/TableFinish.js","tables/TablesList.js","dashboard/Dashboard.js","reservations/ReservationForm.js","reservations/ReservationCreate.js","reservations/ReservationSeat.js","reservations/ReservationSearch.js","reservations/ReservationEdit.js","tables/TableForm.js","tables/TableCreate.js","layout/NotFound.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","formatAsDate","dateString","match","today","Date","previous","currentDate","split","year","month","day","setMonth","setDate","next","formatDate","reservation","reservation_date","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","createReservation","method","body","JSON","stringify","readReservation","reservation_id","updateReservation","updatedReservation","createTable","table","listTables","seatReservation","table_id","cancelReservation","searchReservations","mobile_number","useQuery","URLSearchParams","useLocation","search","ErrorAlert","ReservationCancel","useState","setError","clickHandler","event","preventDefault","abortController","AbortController","window","confirm","location","reload","abort","onClick","ReservationsList","tableRows","scope","first_name","last_name","reservation_time","people","href","length","role","style","minWidth","TableFinish","type","e","log","TablesList","tables","table_name","capacity","Dashboard","history","useHistory","query","route","useRouteMatch","setReservations","reservationsError","setReservationsError","setCurrentDate","tablesError","setTablesError","setTables","useEffect","catch","getQueryDate","get","push","finishTable","ReservationForm","submitHandler","changeHandler","cancelHandler","onSubmit","htmlFor","required","onChange","placeholder","pattern","min","ReservationCreate","setReservation","Number","target","replace","previousReservation","goBack","ReservationSeat","useParams","formData","setFormData","tableId","reservationId","previousFormData","ReservationSearch","inputData","setInputData","numericValue","ReservationEdit","loadedReservation","loadReservation","TableForm","TableCreate","NotFound","Routes","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSA4DeA,MA/Cf,WACC,OACE,qBAAKC,UAAU,2CAAf,SACD,sBAAKA,UAAU,qDAAf,UACE,cAAC,IAAD,CACDA,UAAU,kFACVC,GAAG,IAFF,SAID,qBAAKD,UAAU,0BAA0BE,GAAG,MAA5C,SACE,uDAGD,oBAAIF,UAAU,yBACd,qBACDA,UAAU,oDACVE,GAAG,mBAFF,UAID,oBAAIF,UAAU,aAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAA9B,UACD,sBAAMD,UAAU,oBADf,qBAKF,oBAAIA,UAAU,gBAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,UAA9B,UACD,sBAAMD,UAAU,2BADf,kBAKF,oBAAIA,UAAU,gBAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,oBAA9B,UACD,sBAAMD,UAAU,eADf,2BAKF,oBAAIA,UAAU,gBAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAA9B,UACD,sBAAMD,UAAU,iBADf,8B,8BC/CCG,EAAa,qBAcnB,SAASC,EAAaC,GACrB,MAAM,GAAN,OAAUA,EAAKC,cAAcC,SAAS,IAAtC,aAA8CF,EAAKG,WAAa,GAC9DD,SAAS,IACTE,SAAS,EAAG,KAFd,YAEsBJ,EAAKK,UAAUH,SAAS,IAAIE,SAAS,EAAG,MAUxD,SAASE,EAAaC,GAC5B,OAAOA,EAAWC,MAAMV,GAAY,GAmB9B,SAASW,IACf,OAAOV,EAAa,IAAIW,MAUlB,SAASC,EAASC,GACxB,MAAyBA,EAAYC,MAAM,KAA3C,mBAAKC,EAAL,KAAWC,EAAX,KAAkBC,EAAlB,KAEMhB,EAAO,IAAIU,KAAKI,EADtBC,GAAS,EAC0BC,GAGnC,OAFAhB,EAAKiB,SAASjB,EAAKG,YACnBH,EAAKkB,QAAQlB,EAAKK,UAAY,GACvBN,EAAaC,GAUd,SAASmB,EAAKP,GACpB,MAAyBA,EAAYC,MAAM,KAA3C,mBAAKC,EAAL,KAAWC,EAAX,KAAkBC,EAAlB,KAEMhB,EAAO,IAAIU,KAAKI,EADtBC,GAAS,EAC0BC,GAGnC,OAFAhB,EAAKiB,SAASjB,EAAKG,YACnBH,EAAKkB,QAAQlB,EAAKK,UAAY,GACvBN,EAAaC,GC9ErB,SAASoB,EAAWC,GAEnB,OADAA,EAAYC,iBAAmBhB,EAAae,EAAYC,kBACjDD,EAUO,SAASE,EAAsBC,GAC7C,OAAOC,MAAMC,QAAQF,GAClBA,EAAaG,IAAIP,GACjBA,EAAWI,GCTf,IAAMI,EACJC,wBAKIC,EAAU,IAAIC,Q,SAkBLC,E,kFAAf,WAAyBC,EAAKC,EAASC,GAAvC,iBAAAC,EAAA,+EAE2BC,MAAMJ,EAAKC,GAFtC,UAI4B,OAFlBI,EAFV,QAIiBC,OAJjB,yCAKa,MALb,uBAQ0BD,EAASE,OARnC,YAQUC,EARV,QAUgBC,MAVhB,0CAWaC,QAAQC,OAAO,CAAEC,QAASJ,EAAQC,SAX/C,iCAaWD,EAAQK,MAbnB,qCAeuB,eAAf,KAAMC,KAfd,uBAgBMC,QAAQN,MAAM,KAAMO,OAhB1B,sCAmBWN,QAAQO,QAAQf,IAnB3B,2D,sBAyBO,SAAegB,EAAtB,oC,4CAAO,WAAgCC,EAAQC,GAAxC,eAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,kBACZ2B,OAAOC,QAAQJ,GAAQK,SAAQ,mCAAEC,EAAF,KAAOC,EAAP,YAC7B1B,EAAI2B,aAAaC,OAAOH,EAAKC,EAAMzD,eAHhC,SAKQ8B,EAAUC,EAAK,CAAEH,UAASuB,UAAU,IAC9CS,KAAKvC,GACLuC,KAAKC,GAPH,oF,sBAYA,SAAeC,EAAtB,oC,4CAAO,WAAiC3C,EAAagC,GAA9C,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,kBACNM,EAAU,CACd+B,OAAQ,OACRnC,UACAoC,KAAMC,KAAKC,UAAU,CAAEtB,KAAMzB,IAC7BgC,UANG,SAQQrB,EAAUC,EAAKC,EAASb,GARhC,oF,sBAaA,SAAegD,EAAtB,oC,4CAAO,WAA+BC,EAAgBjB,GAA/C,eAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,yBAAwC0C,IAD/C,SAEQtC,EAAUC,EAAK,CAAEoB,UAAU,IACrCS,KAAKvC,GACLuC,KAAKC,GAJH,oF,sBASA,SAAeQ,EAAtB,oC,4CAAO,WAAiCC,EAAoBnB,GAArD,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UACP1B,EADO,yBACsB4C,EAAmBF,iBAE/CpC,EAAU,CACd+B,OAAQ,MACRnC,UACAoC,KAAMC,KAAKC,UAAU,CAAEtB,KAAM0B,KAP1B,SASQxC,EAAUC,EAAKC,EAASsC,GAClCV,KAAKvC,GACLuC,KAAKC,GAXH,oF,sBAgBA,SAAeU,EAAtB,oC,4CAAO,WAA2BC,EAAOrB,GAAlC,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,YACNM,EAAU,CACd+B,OAAQ,OACRnC,UACAoC,KAAMC,KAAKC,UAAU,CAAEtB,KAAM4B,IAC7BrB,UANG,SAQQrB,EAAUC,EAAKC,EAASwC,GARhC,oF,sBAaA,SAAeC,EAAtB,kC,4CAAO,WAA0BtB,GAA1B,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,YACNM,EAAU,CACdJ,UACAuB,UAJG,SAMQrB,EAAUC,EAAKC,EAAS,IANhC,oF,sBAWA,SAAe0C,EAAtB,sC,4CAAO,WAA+BC,EAAUP,EAAgBjB,GAAzD,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,mBAAkCiD,EAAlC,WACN3C,EAAU,CACd+B,OAAQ,MACRnC,UACAoC,KAAMC,KAAKC,UAAU,CAAEtB,KAAM,CAAEwB,oBAC/BjB,UANG,SASQrB,EAAUC,EAAKC,EAAS,IAThC,oF,sBA2BA,SAAe4C,EAAtB,oC,4CAAO,WAAiCR,EAAgBjB,GAAjD,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,yBAAwC0C,EAAxC,YACNpC,EAAU,CACd+B,OAAQ,MACRnC,UACAoC,KAAMC,KAAKC,UAAU,CAAEtB,KAAM,CAAEP,OAAQ,eACvCc,UANG,SAQQrB,EAAUC,EAAKC,GARvB,oF,kEAaA,WAA2B2C,EAAUxB,GAArC,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,mBAAkCiD,EAAlC,WACN3C,EAAU,CACd+B,OAAQ,SACRnC,UACAoC,KAAMC,KAAKC,UAAU,CAAEtB,KAAM+B,IAC7BxB,UANG,SAQQrB,EAAUC,EAAKC,EAAS,IARhC,oF,sBAaA,SAAe6C,EAAtB,oC,4CAAO,WAAkCC,EAAe3B,GAAjD,eAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UACP1B,EADO,uCACoCoD,IAF3C,SAIQhD,EAAUC,EAAK,CAAEoB,WAC3BS,KAAKvC,GACLuC,KAAKC,GANH,oF,sBAzKPjC,EAAQ+B,OAAO,eAAgB,oBCAhBoB,MAJf,WACC,OAAO,IAAIC,gBAAgBC,cAAcC,SCM3BC,MARf,YAAgC,IAAV3C,EAAS,EAATA,MACrB,OACCA,GACC,sBAAK/C,UAAU,yBAAf,oBAAgD+C,EAAMG,YCiC1CyC,EAtCW,SAAC,GAAwB,IAAtBhB,EAAqB,EAArBA,eAC5B,EAA0BiB,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KAEMC,EAAY,uCAAG,WAAOC,GAAP,eAAAtD,EAAA,yDACpBsD,EAAMC,iBACNH,EAAS,MAEHI,EAAkB,IAAIC,iBAEPC,OAAOC,QAC3B,kEAPmB,0CAWZjB,EAAkBR,EAAgBsB,EAAgBvC,QAXtC,OAYlByC,OAAOE,SAASC,SAZE,kDAcC,eAAf,KAAMlD,MACTyC,EAAS,EAAD,IAfS,kCAmBb,kBAAMI,EAAgBM,WAnBT,0DAAH,sDAsBlB,OACC,gCACC,cAAC,EAAD,CAAYxD,MAAOA,IACnB,wBACC/C,UAAU,oBACV,6BAA4B2E,EAC5B6B,QAASV,EAHV,wBCoDYW,EAnFU,SAAC,GAA4B,IAA1B5E,EAAyB,EAAzBA,aAAcxB,EAAW,EAAXA,KAClCqG,EAAY7E,EAAaG,KAAI,SAACN,GAAD,OACjC,+BACE,oBAAIiF,MAAM,MAAV,SAAiBjF,EAAYiD,iBAC7B,6BAAKjD,EAAYkF,aACjB,6BAAKlF,EAAYmF,YACjB,6BAAKnF,EAAY2D,gBACjB,6BAAK3D,EAAYC,mBACjB,6BAAKD,EAAYoF,mBACjB,6BAAKpF,EAAYqF,SACjB,oBAAI,6BAA4BrF,EAAYiD,eAA5C,SACGjD,EAAYkB,SAGf,6BAC0B,WAAvBlB,EAAYkB,QACX,mBACE5C,UAAU,kBACVgH,KAAI,wBAAmBtF,EAAYiD,eAA/B,SAFN,oBAQoB,WAAvBjD,EAAYkB,QAA8C,WAAvBlB,EAAYkB,OAC9C,qCACE,6BACE,mBACE5C,UAAU,kBACVgH,KAAI,wBAAmBtF,EAAYiD,eAA/B,SAFN,oBAOF,6BACE,cAAC,EAAD,CAAmBA,eAAgBjD,EAAYiD,sBAInD,qCACE,uBACA,4BAvCGjD,EAAYiD,mBA6CvB,OAAI9C,EAAaoF,OAAS,EAEtB,qBAAKjH,UAAU,gDAAf,SACE,wBAAOA,UAAU,oBAAjB,UACE,gCACE,+BACE,oBAAI2G,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,2BACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,8BACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,aAGd,gCAAQD,SAMd,sBACE1G,UAAU,6BACVkH,KAAK,QACLC,MAAO,CAAEC,SAAU,QAHrB,UAKG,IALH,oCAMgC/G,EANhC,SCjDWgH,EAvBK,SAAC,GAAoC,IAAlCtC,EAAiC,EAAjCA,MAAOe,EAA0B,EAA1BA,aAAc/C,EAAY,EAAZA,MAM1C,OACEgC,EAAMJ,gBACJ,gCACE,cAAC,EAAD,CAAY5B,MAAOA,IACnB,wBACE,iCAAyBgC,EAAMG,UAC/BlF,UAAU,iBACVsH,KAAK,SACLd,QAbW,SAACe,GAClBA,EAAEvB,iBACFF,EAAaf,EAAMG,UACnB7B,QAAQmE,IAAI,iBAAkBzC,EAAMG,WAMhC,wBCsBOuC,EAlCI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQ5B,EAA0B,EAA1BA,aAAc/C,EAAY,EAAZA,MACpC2D,EAAYgB,EAAO1F,KAAI,SAAC+C,GAAD,OAC3B,+BACE,oBAAI4B,MAAM,MAAV,SAAiB5B,EAAM4C,aACvB,6BAAK5C,EAAM6C,WACX,oBAAI,uBAAsB7C,EAAMG,SAAhC,SAC4B,OAAzBH,EAAMJ,eAA0B,OAAS,aAE5C,6BACE,cAAC,EAAD,CAAaI,MAAOA,EAAOe,aAAcA,EAAc/C,MAAOA,QAPzDgC,EAAMG,aAYjB,OACE,qCACE,wCACA,qBAAKlF,UAAU,gDAAf,SACE,wBAAOA,UAAU,oBAAjB,UACE,gCACE,+BACE,oBAAI2G,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,yBAGJ,gCAAQD,aC2IHmB,MAvJf,YAA8B,IAATxH,EAAQ,EAARA,KACbyH,EAAUC,cACVC,EAAQ1C,IACR2C,EAAQC,cAEd,EAAwCtC,mBAAS,IAAjD,mBAAO/D,EAAP,KAAqBsG,EAArB,KACA,EAAkDvC,mBAAS,MAA3D,mBAAOwC,EAAP,KAA0BC,EAA1B,KACA,EAAsCzC,mBAASvF,GAA/C,mBAAOY,EAAP,KAAoBqH,EAApB,KACA,EAAsC1C,mBAAS,MAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KACA,EAA4B5C,mBAAS,IAArC,mBAAO8B,EAAP,KAAee,EAAf,KA2EA,OAzEAC,qBAKA,WACE,IAAMzC,EAAkB,IAAIC,gBAM5B,OALAmC,EAAqB,MACrB7E,EAAiB,CAAEnD,KAAMY,GAAegF,EAAgBvC,QACrDS,KAAKgE,GACLQ,MAAMN,GACTrD,EAAWiB,EAAgBvC,QAAQS,KAAKsE,GAAWE,MAAMH,GAClD,kBAAMvC,EAAgBM,WAZN,CAACtF,IAgB1ByH,qBAAU,YACR,WACE,IAAME,EAAeZ,EAAMa,IAAI,QAG7BP,EADEM,GAGa9H,KAGnBJ,KACC,CAACsH,EAAOC,IA+CT,uBAAMjI,UAAU,yCAAhB,UACE,sBAAKA,UAAU,2FAAf,UACE,8BACE,oBAAIA,UAAU,KAAd,yBAEF,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,wBACEsH,KAAK,SACLtH,UAAU,4BACVwG,QAAS,WACPsB,EAAQgB,KAAR,0BAAgC9H,EAASC,KACzCqH,EAAetH,EAASC,KAL5B,0BAUA,wBACEqG,KAAK,SACLtH,UAAU,4BACVwG,QAAS,WACPsB,EAAQgB,KAAR,0BAAgChI,MAChCwH,EAAexH,MALnB,mBAUA,wBACEwG,KAAK,SACLtH,UAAU,4BACVwG,QAAS,WACPsB,EAAQgB,KAAR,0BAAgCtH,EAAKP,KACrCqH,EAAe9G,EAAKP,KALxB,8BAaN,sBAAKjB,UAAU,WAAf,UACE,qBAAIA,UAAU,8BAAd,8BACoBiB,KAEpB,cAAC,EAAD,CAAY8B,MAAOqF,IAClBvG,EACC,cAAC,EAAD,CAAkBA,aAAcA,EAAcxB,KAAMY,IAEpD,gBAGJ,qBAAKjB,UAAU,WAAf,SACG0H,EACC,cAAC,EAAD,CACEA,OAAQA,EACR3E,MAAOwF,EACPzC,aArGkB,SAACZ,GAC3B,IAAMe,EAAkB,IAAIC,gBAe5B,OAdA7C,QAAQmE,IAAI,WAAYtC,GACHiB,OAAOC,QAC1B,mEP6GC,SAAP,oCO1GM2C,CAAY7D,EAAUe,EAAgBvC,QAAQS,MAAK,SAACoD,GAClDvC,EAAWiB,EAAgBvC,QACxBS,KAAKsE,GACLE,MAAMH,GACThF,EAAiB,CAAEnD,KAAMY,GAAegF,EAAgBvC,QACrDS,KAAKgE,GACLQ,MAAMN,MAGN,kBAAMpC,EAAgBM,YAwFvB,mB,gBCtBKyC,GA1IS,SAAC,GAKlB,IAJNtH,EAIK,EAJLA,YACAuH,EAGK,EAHLA,cACAC,EAEK,EAFLA,cACAC,EACK,EADLA,cAEA,OACC,+BACC,uBAAMC,SAAUH,EAAhB,UACC,sBAAKjJ,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,aAFT,UAGE,IAHF,iBAMA,uBACCrJ,UAAU,eACVsH,KAAK,OACLpH,GAAG,aACHkD,KAAK,aACLkG,UAAU,EACVtF,MAAOtC,EAAYkF,WACnB2C,SAAUL,EACVM,YAAY,mCAGd,sBAAKxJ,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,YAFT,UAGE,IAHF,gBAMA,uBACCrJ,UAAU,eACVsH,KAAK,OACLpH,GAAG,YACHkD,KAAK,YACLkG,UAAU,EACVtF,MAAOtC,EAAYmF,UACnB0C,SAAUL,EACVM,YAAY,kCAGd,sBAAKxJ,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,gBAFT,UAGE,IAHF,mBAMA,uBACCrJ,UAAU,eACVsH,KAAK,MACLpH,GAAG,gBACHkD,KAAK,gBACLkG,UAAU,EACVtF,MAAOtC,EAAY2D,cACnBkE,SAAUL,EACVM,YAAY,oBAGd,sBAAKxJ,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,mBAFT,UAGE,IAHF,uBAMA,uBACCrJ,UAAU,eACVsH,KAAK,OACLpH,GAAG,mBACHkD,KAAK,mBACLkG,UAAU,EACVtF,MAAOtC,EAAYC,iBACnB4H,SAAUL,EACVM,YAAY,aACZC,QAAQ,4BAGV,sBAAKzJ,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,mBAFT,UAGE,IAHF,uBAMA,uBACCrJ,UAAU,eACVsH,KAAK,OACLpH,GAAG,mBACHkD,KAAK,mBACLkG,UAAU,EACVtF,MAAOtC,EAAYoF,iBACnByC,SAAUL,EACVM,YAAY,QACZC,QAAQ,yBAGV,sBAAKzJ,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,SAFT,UAGE,IAHF,uBAMA,uBACCrJ,UAAU,eACVsH,KAAK,SACLpH,GAAG,SACHkD,KAAK,SACLkG,UAAU,EACVtF,MAAOtC,EAAYqF,OACnBwC,SAAUL,EACVM,YAAa,EACbE,IAAK,OAGP,sBAAK1J,UAAU,OAAf,UACC,wBACCsH,KAAK,SACLtH,UAAU,kBAFX,oBAKA,wBACCsH,KAAK,SACLtH,UAAU,oBACVwG,QAAS2C,EAHV,6BC7CUQ,GAxEW,WACzB,IAAM7B,EAAUC,cAWhB,EAAsCnC,mBAAS,gBATtB,CACxBgB,WAAY,GACZC,UAAW,GACXxB,cAAe,GACf1D,iBAAkB,GAClBmF,iBAAkB,GAClBC,OAAQ,MAGT,mBAAOrF,EAAP,KAAoBkI,EAApB,KACA,EAA0BhE,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KAMMoD,EAAa,uCAAG,WAAOlD,GAAP,iBAAAtD,EAAA,6DACrBsD,EAAMC,iBACNH,EAAS,MAEHI,EAAkB,IAAIC,gBAC5BxE,EAAYqF,OAAS8C,OAAOnI,EAAYqF,QALnB,kBAQG1C,EACtB3C,EACAuE,EAAgBvC,QAVG,OAQdf,EARc,OAYpBmF,EAAQgB,KAAR,0BACoBnI,EAAagC,EAAShB,oBAbtB,kDAgBD,eAAf,KAAMyB,MACTyC,EAAS,EAAD,IAjBW,kCAoBd,kBAAMI,EAAgBM,WApBR,0DAAH,sDAuCnB,OACC,qCACC,oBAAIvG,UAAU,YAAd,gCACA,cAAC,EAAD,CAAY+C,MAAOA,IACnB,cAAC,GAAD,CACCrB,YAAaA,EACbuH,cAAeA,EACfC,cArBkB,SAAC,GAAiC,IAAD,IAA9BY,OAAU1G,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,MAC3B,kBAATZ,IAEFY,EAAQA,EAAM+F,QAAQ,MAAO,KAG/BH,GAAe,SAACI,GAAD,oBAAC,gBACXA,GADU,kBAEZ5G,EAAOY,QAcPmF,cAnDmB,WACrBrB,EAAQmC,gBC6EKC,GA/FS,WACvB,IAAQvF,EAAmBwF,cAAnBxF,eACFmD,EAAUC,cAEhB,EAAgCnC,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KACA,EAA4BzE,mBAAS,IAArC,mBAAO8B,EAAP,KAAee,EAAf,KACA,EAA0B7C,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KAGA6C,qBAAU,WACT,IAAMzC,EAAkB,IAAIC,gBAG5B,OAFAL,EAAS,MACTb,EAAWiB,EAAgBvC,QAAQS,KAAKsE,GAAWE,MAAM9C,GAClD,kBAAMI,EAAgBM,WAC3B,CAAC5B,IAEJ,IAAMsE,EAAa,uCAAG,WAAOlD,GAAP,mBAAAtD,EAAA,6DACrBsD,EAAMC,iBACNH,EAAS,MAEHI,EAAkB,IAAIC,gBAEtBoE,EAAUT,OAAOO,EAASlF,UAC1BqF,EAAgBV,OAAOlF,GAPR,kBAUdM,EAAgBqF,EAASC,EAAetE,EAAgBvC,QAV1C,OAWpBoE,EAAQgB,KAAK,KAXO,kDAaD,eAAf,KAAM1F,MACTyC,EAAS,EAAD,IAdW,kCAiBd,kBAAMI,EAAgBM,WAjBR,0DAAH,sDA2BnB,OACC,sBAAKvG,UAAU,YAAf,UACC,qBAAKA,UAAU,MAAf,SACC,cAAC,EAAD,CAAY+C,MAAOA,MAEpB,qBAAK/C,UAAU,YAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAMoJ,SAAUH,EAAhB,UACC,qBAAIjJ,UAAU,aAAd,qCAC0B2E,KAE1B,sBAAK3E,UAAU,iBAAf,UACC,uBACCqJ,QAAQ,WACRrJ,UAAU,aAFX,2BAKA,yBACCE,GAAG,WACHkD,KAAK,WACLmG,SA3Be,SAAC,GAAiC,IAAD,IAA9BO,OAAU1G,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,MACxCqG,GAAY,SAACG,GAAD,oBAAC,gBACTA,GADQ,kBAEVpH,EAAOY,QAyBHA,MAAOoG,EAASlF,SAChBlF,UAAU,eALX,UAMC,wBAAQgE,MAAM,GAAd,4BACC0D,EAAO1F,KAAI,SAAC+C,GAAD,OACX,yBAECf,MAAOe,EAAMG,SAFd,UAGEH,EAAM4C,WAHR,MAGuB5C,EAAM6C,WAFvB7C,EAAMG,mBAQf,wBACCoC,KAAK,SACLtH,UAAU,4BAFX,oBAKA,wBACCsH,KAAK,SACLtH,UAAU,8BACVwG,QAAS,kBAAMsB,EAAQmC,UAHxB,+BCMSQ,GAxFW,WACzB,MAAkC7E,mBAAS,IAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KACA,EAA0B/E,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAO/D,EAAP,KAAqBsG,EAArB,KAEMc,EAAa,uCAAG,WAAOlD,GAAP,iBAAAtD,EAAA,6DACrBsD,EAAMC,iBACNH,EAAS,MAEHI,EAAkB,IAAIC,gBAJP,kBAMGd,EACtBsF,EACAzE,EAAgBvC,QARG,OAMdf,EANc,OAWpBwF,EAAgBxF,GAChBgI,EAAa,IAZO,kDAcD,eAAf,KAAMvH,MACTyC,EAAS,EAAD,IAfW,kCAkBd,kBAAMI,EAAgBM,WAlBR,0DAAH,sDA+BnB,OACC,iCACC,sBAAKvG,UAAU,iBAAf,UACC,sBAAKA,UAAU,qBAAf,UACC,kDAEA,cAAC,EAAD,CAAY+C,MAAOA,OAGpB,sBAAMqG,SAAUH,EAAhB,SACC,sBAAKjJ,UAAU,uBAAf,UACC,uBACCsH,KAAK,MACLtH,UAAU,eACVoD,KAAK,gBACLoG,YAAY,kCACZ,aAAW,gBACX,mBAAiB,eACjBF,UAAU,EACVtF,MAAO0G,EACPnB,SA9BgB,SAACxD,GACtB,IAGM6E,EAHa7E,EAAM+D,OAAO9F,MAGA+F,QAAQ,MAAO,IAG/CY,EAAaC,MAyBT,wBACC5K,UAAU,kBACVE,GAAG,eACHoH,KAAK,SAHN,0BAUH,sBAAKtH,UAAU,sBAAf,UACC,qBAAKA,UAAU,qBAAf,SACC,iDAEA6B,EAAaoF,OAAS,EACtB,qBAAKjH,UAAU,qBAAf,SACC,cAAC,EAAD,CAAkB6B,aAAcA,MAGjC,qBACC7B,UAAU,kDACVkH,KAAK,QAFN,0CCaU2D,GAxFS,WAEtB,IAAM/C,EAAUC,cAERpD,EAAmBwF,cAAnBxF,eAER,EAAsCiB,mBAAS,IAA/C,mBAAOlE,EAAP,KAAoBkI,EAApB,KACA,EAA0BhE,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KAGA6C,qBAAU,WACRkB,EAAe,IAEf,IAAM3D,EAAkB,IAAIC,gBAHd,4CAKd,4BAAAzD,EAAA,+EAEkCiC,EAAgBC,EAAgBsB,EAAgBvC,QAFlF,OAEQoH,EAFR,OAGElB,EAAekB,GAHjB,gDAKoB,eAAf,KAAM1H,MACPyC,EAAS,EAAD,IANZ,0DALc,sBAgBd,OAhBc,mCAedkF,GACO,kBAAM9E,EAAgBM,WAC5B,CAAC5B,IAKJ,IAYIsE,EAAa,uCAAG,WAAMlD,GAAN,iBAAAtD,EAAA,6DAClBsD,EAAMC,iBAENH,EAAS,MAEHI,EAAkB,IAAIC,gBAC5BxE,EAAYqF,OAAS8C,OAAOnI,EAAYqF,QANtB,kBASSnC,EAAkBlD,EAAauE,EAAgBvC,QATxD,OASRf,EATQ,OAUdmF,EAAQgB,KAAR,0BACqBnI,EAAagC,EAAShB,oBAX7B,kDAeK,eAAf,KAAMyB,MACRyC,EAAS,EAAD,IAhBI,kCAmBX,kBAAMI,EAAgBM,WAnBX,0DAAH,sDA2BlB,OAAG7E,EAAYiD,eAEZ,gCACE,mDAAsBjD,EAAYiD,kBAClC,cAAC,EAAD,CAAY5B,MAAOA,IACnB,cAAC,GAAD,CACErB,YAAaA,EACbwH,cA9Ce,SAAC,GAAa,IAAZY,EAAW,EAAXA,OACD,kBAAhBA,EAAO1G,OAET0G,EAAO9F,MAAQ8F,EAAO9F,MAAM+F,QAAQ,MAAO,KAE7CH,EAAe,6BACRlI,GADO,kBAEToI,EAAO1G,KAAO0G,EAAO9F,UAwCtBiF,cAAeA,EACfE,cAbc,WAClBrB,EAAQmC,eAiBJ,cChCOe,GA9DG,SAAC,GAKZ,IAJN/B,EAIK,EAJLA,cACAE,EAGK,EAHLA,cACAD,EAEK,EAFLA,cACAkB,EACK,EADLA,SAEA,OACC,uBAAMhB,SAAUH,EAAhB,UACC,oBAAIjJ,UAAU,YAAd,8BACA,sBAAKA,UAAU,OAAf,UACC,wBACCA,UAAU,aACVqJ,QAAQ,aAFT,UAGE,IAHF,gBAMA,uBACCrJ,UAAU,eACVoD,KAAK,aACLlD,GAAG,aACHoH,KAAK,OACLgC,UAAU,EACVtF,MAAOoG,EAASzC,WAChB4B,SAAUL,EACVM,YAAY,kBAGd,sBAAKxJ,UAAU,OAAf,UACC,uBACCA,UAAU,aACVqJ,QAAQ,WAFT,sBAKA,uBACCrJ,UAAU,eACVoD,KAAK,WACLlD,GAAG,WACHoH,KAAK,SACLgC,UAAU,EACVtF,MAAOoG,EAASxC,SAChB2B,SAAUL,EACVM,YAAY,IACZE,IAAK,OAGP,gCACC,wBACCpC,KAAK,SACLtH,UAAU,kBAFX,oBAKA,wBACCsH,KAAK,SACLtH,UAAU,oBACVwG,QAAS2C,EAHV,2BCOW8B,GAlDK,WACnB,IAAMnD,EAAUC,cAOhB,EAAgCnC,mBAAS,gBALhB,CACxB+B,WAAY,GACZC,SAAU,MAGX,mBAAOwC,EAAP,KAAiBC,EAAjB,KACA,EAA0BzE,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KAMMoD,EAAa,uCAAG,WAAOlD,GAAP,eAAAtD,EAAA,6DACrBsD,EAAMC,iBACNH,EAAS,MACHI,EAAkB,IAAIC,gBAC5BkE,EAASxC,SAAWiC,OAAOO,EAASxC,UAJf,kBAOd9C,EAAYsF,EAAUnE,EAAgBvC,QAPxB,OAQpBoE,EAAQgB,KAAK,KARO,kDAUpBjD,EAAS,EAAD,IAVY,kCAYd,kBAAMI,EAAgBM,WAZR,0DAAH,sDAsBnB,OACC,iCACC,cAAC,EAAD,CAAYxD,MAAOA,IACnB,cAAC,GAAD,CACCkG,cAAeA,EACfE,cA/BmB,WACrBrB,EAAQmC,UA+BNG,SAAUA,EACVlB,cAdmB,SAAC,GAAiC,IAAD,IAA9BY,OAAU1G,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,MACxCqG,GAAY,SAACG,GAAD,oBAAC,gBACTA,GADQ,kBAEVpH,EAAOY,cC1BIkH,OARf,WACC,OACC,qBAAKlL,UAAU,WAAf,SACC,8CCgDYmL,OAtCf,WACC,OACC,eAAC,IAAD,WACC,cAAC,IAAD,CACCC,OAAO,EACPC,KAAK,IAFN,SAGC,cAAC,IAAD,CAAUpL,GAAI,iBAEf,cAAC,IAAD,CACCmL,OAAO,EACPC,KAAK,gBAFN,SAGC,cAAC,IAAD,CAAUpL,GAAI,iBAEf,cAAC,IAAD,CAAOoL,KAAK,aAAZ,SACC,cAAC,EAAD,CAAWhL,KAAMS,QAElB,cAAC,IAAD,CAAOuK,KAAK,oBAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,qCAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,qCAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,UACC,cAAC,GAAD,UCdWC,OA1Bf,WACC,OACC,sBAAKtL,UAAU,kBAAf,UACC,sBACCA,UAAU,YACVE,GAAG,SAFJ,UAGC,qBAAKF,UAAU,oBAAf,SACC,cAAC,EAAD,MAED,qBAAKA,UAAU,MAAf,SACC,cAAC,GAAD,SAGF,qBAAKA,UAAU,WAAf,SACS,qBAAKA,UAAU,YAAf,SACT,qBAAKA,UAAU,mDAAf,SACC,mBAAGA,UAAU,sBAAb,SACC,mBAAGgH,KAAK,OAAR,qCCbUuE,OAVf,WACC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACC,cAAC,GAAD,SCTJG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b2a5228a.chunk.js","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport \"./Menu.css\";\n\nimport { Link } from \"react-router-dom\";\nimport \"./Layout.css\";\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n\treturn (\n\t  <nav className=\"navbar navbar-dark align-items-start p-0\">\n\t\t<div className=\"container-fluid d-flex flex-column flex-sm-row p-0\">\n\t\t  <Link\n\t\t\tclassName=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n\t\t\tto=\"/\"\n\t\t  >\n\t\t\t<div className=\"sidebar-brand-text mx-3\" id=\"top\">\n\t\t\t  <span>Periodic Tables</span>\n\t\t\t</div>\n\t\t  </Link>\n\t\t  <hr className=\"sidebar-divider my-0\" />\n\t\t  <ul\n\t\t\tclassName=\"nav navbar-nav text-light flex-row flex-sm-column\"\n\t\t\tid=\"accordionSidebar\"\n\t\t  >\n\t\t\t<li className=\"nav-item  \">\n\t\t\t  <Link className=\"nav-link\" to=\"/dashboard\">\n\t\t\t\t<span className=\"oi oi-dashboard\" />\n\t\t\t\t&nbsp;Dashboard\n\t\t\t  </Link>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item pl-2\">\n\t\t\t  <Link className=\"nav-link\" to=\"/search\">\n\t\t\t\t<span className=\"oi oi-magnifying-glass\" />\n\t\t\t\t&nbsp;Search\n\t\t\t  </Link>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item pl-2\">\n\t\t\t  <Link className=\"nav-link\" to=\"/reservations/new\">\n\t\t\t\t<span className=\"oi oi-plus\" />\n\t\t\t\t&nbsp;New Reservation\n\t\t\t  </Link>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item pl-2\">\n\t\t\t  <Link className=\"nav-link\" to=\"/tables/new\">\n\t\t\t\t<span className=\"oi oi-layers\" />\n\t\t\t\t&nbsp;New Table\n\t\t\t  </Link>\n\t\t\t</li>\n\t\t  </ul>\n\t\t</div>\n\t  </nav>\n\t);\n  }\n  \nexport default Menu;","/** @format */\n\nconst dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nfunction asDateString(date) {\n\treturn `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n\t\t.toString(10)\n\t\t.padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n\treturn dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n\treturn timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n\treturn asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n\tlet [year, month, day] = currentDate.split(\"-\");\n\tmonth -= 1;\n\tconst date = new Date(year, month, day);\n\tdate.setMonth(date.getMonth());\n\tdate.setDate(date.getDate() - 1);\n\treturn asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n\tlet [year, month, day] = currentDate.split(\"-\");\n\tmonth -= 1;\n\tconst date = new Date(year, month, day);\n\tdate.setMonth(date.getMonth());\n\tdate.setDate(date.getDate() + 1);\n\treturn asDateString(date);\n}","/** @format */\n\nimport { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n\treservation.reservation_date = formatAsDate(reservation.reservation_date);\n\treturn reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n\treturn Array.isArray(reservations)\n\t\t? reservations.map(formatDate)\n\t\t: formatDate(reservations);\n}","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n *\n * @format\n */\n\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n//Retrieves all existing reservations\n\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n//Creates new reservation\n\nexport async function createReservation(reservation, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation);\n}\n\n//Retrieves a single reservation\n\nexport async function readReservation(reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n  return await fetchJson(url, { signal }, {})\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n//Updates a single reservation\n\nexport async function updateReservation(updatedReservation, signal) {\n  const url = new URL(\n    `${API_BASE_URL}/reservations/${updatedReservation.reservation_id}`\n  );\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: updatedReservation }),\n  };\n  return await fetchJson(url, options, updatedReservation)\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n//Creates a new table\n\nexport async function createTable(table, signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options, table);\n}\n\n//Retrieves all tables\n\nexport async function listTables(signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  const options = {\n    headers,\n    signal,\n  };\n  return await fetchJson(url, options, []);\n}\n\n//Assigns a reservation_id to a table\n\nexport async function seatReservation(table_id, reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat/`);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { reservation_id } }),\n    signal,\n  };\n\n  return await fetchJson(url, options, {});\n}\n\n//update reservation status to seated\n\nexport async function updateReservationStatus(reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { status: \"seated\" } }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation_id);\n}\n\n//update reservation status to cancelled\n\nexport async function cancelReservation(reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { status: \"cancelled\" } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n//deletes a table\n\nexport async function finishTable(table_id, signal) {\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat/`);\n  const options = {\n    method: \"DELETE\",\n    headers,\n    body: JSON.stringify({ data: table_id }),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n//Retrieves all reservations with the same mobile number\n\nexport async function searchReservations(mobile_number, signal) {\n  const url = new URL(\n    `${API_BASE_URL}/reservations?mobile_number=${mobile_number}`\n  );\n  return await fetchJson(url, { signal })\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n","/**\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\n *\n *\n *     const query = useQuery();\n *     const date = query.get(\"date\")\n *\n * @format\n * @example\n */\n\nimport { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n\treturn new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;","/** @format */\n\nimport React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n\treturn (\n\t\terror && (\n\t\t\t<div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n\t\t)\n\t);\n}\n\nexport default ErrorAlert;","/** @format */\n\nimport React, { useState } from \"react\";\n\n//import components\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\n//import utility functions\nimport { cancelReservation } from \"../utils/api.js\";\n\nconst ReservationCancel = ({ reservation_id }) => {\n\tconst [error, setError] = useState(null);\n\n\tconst clickHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tsetError(null);\n\n\t\tconst abortController = new AbortController();\n\n\t\tconst confirmation = window.confirm(\n\t\t\t\"Do you want to cancel this reservation? This cannot be undone.\",\n\t\t);\n\t\tif (confirmation) {\n\t\t\ttry {\n\t\t\t\tawait cancelReservation(reservation_id, abortController.signal);\n\t\t\t\twindow.location.reload();\n\t\t\t} catch (error) {\n\t\t\t\tif (error.name !== \"AbortError\") {\n\t\t\t\t\tsetError(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn () => abortController.abort();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<ErrorAlert error={error} />\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\tdata-reservation-id-cancel={reservation_id}\n\t\t\t\tonClick={clickHandler}>\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ReservationCancel;","/** @format */\n\nimport React from \"react\";\n\n//import components\nimport ReservationCancel from \"./ReservationCancel\";\n\nconst ReservationsList = ({ reservations, date }) => {\n  const tableRows = reservations.map((reservation) => (\n    <tr key={reservation.reservation_id}>\n      <th scope=\"row\">{reservation.reservation_id}</th>\n      <td>{reservation.first_name}</td>\n      <td>{reservation.last_name}</td>\n      <td>{reservation.mobile_number}</td>\n      <td>{reservation.reservation_date}</td>\n      <td>{reservation.reservation_time}</td>\n      <td>{reservation.people}</td>\n      <td data-reservation-id-status={reservation.reservation_id}>\n        {reservation.status}\n        \n      </td>\n      <td>\n        {reservation.status === \"booked\" && (\n          <a\n            className=\"btn btn-success\"\n            href={`/reservations/${reservation.reservation_id}/seat`}\n          >\n            Seat\n          </a>\n        )}\n      </td>\n      {reservation.status === \"booked\" || reservation.status === \"seated\" ? (\n        <>\n          <td>\n            <a\n              className=\"btn btn-primary\"\n              href={`/reservations/${reservation.reservation_id}/edit`}\n            >\n              Edit\n            </a>\n          </td>\n          <td>\n            <ReservationCancel reservation_id={reservation.reservation_id} />\n          </td>\n        </>\n      ) : (\n        <>\n          <td></td>\n          <td></td>\n        </>\n      )}\n    </tr>\n  ));\n\n  if (reservations.length > 0) {\n    return (\n      <div className=\"table table-striped table-responsive table-sm\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Mobile Number</th>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Time</th>\n              <th scope=\"col\">Number of people</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </table>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"container alert alert-dark\"\n      role=\"alert\"\n      style={{ minWidth: \"100%\" }}\n    >\n      {\" \"}\n      {`No reservations found for ${date}.`}\n    </div>\n  );\n};\n\nexport default ReservationsList;\n","/** @format */\n\nimport React from \"react\";\n\n//import components\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nconst TableFinish = ({ table, clickHandler, error }) => {\n  const newHandler = (e) => {\n    e.preventDefault();\n    clickHandler(table.table_id);\n    console.log(\"table.table_id\", table.table_id);\n  };\n  return (\n    table.reservation_id && (\n      <div>\n        <ErrorAlert error={error} />\n        <button\n          data-table-id-finish={`${table.table_id}`}\n          className=\"btn btn-danger\"\n          type=\"button\"\n          onClick={newHandler}\n        >\n          Finish\n        </button>\n      </div>\n    )\n  );\n};\n\nexport default TableFinish;\n","/** @format */\n\n//import components\nimport TableFinish from \"./TableFinish\";\n\nconst TablesList = ({ tables, clickHandler, error }) => {\n  const tableRows = tables.map((table) => (\n    <tr key={table.table_id}>\n      <th scope=\"row\">{table.table_name}</th>\n      <td>{table.capacity}</td>\n      <td data-table-id-status={table.table_id}>\n        {table.reservation_id === null ? \"free\" : \"occupied\"}\n      </td>\n      <td>\n        <TableFinish table={table} clickHandler={clickHandler} error={error} />\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <h4>Tables</h4>\n      <div className=\"table table-striped table-responsive table-sm\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Table name</th>\n              <th scope=\"col\">Capacity</th>\n              <th scope=\"col\">Table status</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default TablesList;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\n//import utility functions\nimport { listReservations, listTables, finishTable } from \"../utils/api\";\nimport useQuery from \"../utils/useQuery\";\nimport { today, previous, next } from \"../utils/date-time\";\n\n//import components\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport ReservationsList from \"../reservations/ReservationsList\";\nimport TablesList from \"../tables/TablesList\";\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\n\nfunction Dashboard({ date }) {\n  const history = useHistory();\n  const query = useQuery();\n  const route = useRouteMatch();\n\n  const [reservations, setReservations] = useState([]);\n  const [reservationsError, setReservationsError] = useState(null);\n  const [currentDate, setCurrentDate] = useState(date);\n  const [tablesError, setTablesError] = useState(null);\n  const [tables, setTables] = useState([]);\n\n  useEffect(loadDashboard, [currentDate]);\n\n  //load reservations for current date and all tables\n  //   console.log in test file to figure out where it is breaking.\n\n  function loadDashboard() {\n    const abortController = new AbortController();\n    setReservationsError(null);\n    listReservations({ date: currentDate }, abortController.signal)\n      .then(setReservations)\n      .catch(setReservationsError);\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\n    return () => abortController.abort();\n  }\n\n  //update date\n  useEffect(() => {\n    function getDate() {\n      const getQueryDate = query.get(\"date\");\n\n      if (getQueryDate) {\n        setCurrentDate(getQueryDate);\n      } else {\n        setCurrentDate(today());\n      }\n    }\n    getDate();\n  }, [query, route]);\n\n  const finishButtonHandler = (table_id) => {\n    const abortController = new AbortController();\n    console.log(\"table_id\", table_id);\n    const confirmation = window.confirm(\n      \"Is this table ready to seat new guests? This cannot be undone.\"\n    );\n    if (confirmation) {\n      finishTable(table_id, abortController.signal).then((e) => {\n        listTables(abortController.signal)\n          .then(setTables)\n          .catch(setTablesError);\n        listReservations({ date: currentDate }, abortController.signal)\n          .then(setReservations)\n          .catch(setReservationsError);\n      });\n    }\n    return () => abortController.abort();\n  };\n  //handler for table's finish button\n\n  //     event.preventDefault();\n  //     setTablesError(null);\n\n  //     const abortController = new AbortController();\n\n  //     const confirmation = window.confirm(\n  //       \"Is this table ready to seat new guests? This cannot be undone.\"\n  //     );\n  //     if (confirmation) {\n  //       try {\n  //         await finishTable(table_id, abortController.signal);\n  //         const response = await listReservations(\n  //           { date: currentDate },\n  //           abortController.signal\n  //         );\n  //         setReservations(response);\n  //       } catch (error) {\n  //         console.error(error); // Log the error to the console\n  //         setTablesError(error);\n  //       }\n  //     }\n  //     return () => abortController.abort();\n  //   };\n\n  return (\n    <main className=\"col-md-10 ms-sm-auto col-lg-10 px-md-4\">\n      <div className=\"d-flex justify-content-between flex-wrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div>\n          <h1 className=\"h1\">Dashboard</h1>\n        </div>\n        <div className=\"btn-toolbar mb-2 mb-md-0\">\n          <div className=\"btn-group me-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={() => {\n                history.push(`/dashboard?date=${previous(currentDate)}`);\n                setCurrentDate(previous(currentDate));\n              }}\n            >\n              Previous day\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={() => {\n                history.push(`/dashboard?date=${today(currentDate)}`);\n                setCurrentDate(today(currentDate));\n              }}\n            >\n              Today\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={() => {\n                history.push(`/dashboard?date=${next(currentDate)}`);\n                setCurrentDate(next(currentDate));\n              }}\n            >\n              Next day\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <h4 className=\"col text-center text-nowrap\">\n          Reservations for {currentDate}\n        </h4>\n        <ErrorAlert error={reservationsError} />\n        {reservations ? (\n          <ReservationsList reservations={reservations} date={currentDate} />\n        ) : (\n          \"Loading...\"\n        )}\n      </div>\n      <div className=\"row mb-3\">\n        {tables ? (\n          <TablesList\n            tables={tables}\n            error={tablesError}\n            clickHandler={finishButtonHandler}\n          />\n        ) : (\n          \"Loading...\"\n        )}\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","/** @format */\n\nimport React from \"react\";\n\nconst ReservationForm = ({\n\treservation,\n\tsubmitHandler,\n\tchangeHandler,\n\tcancelHandler,\n}) => {\n\treturn (\n\t\t<main>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t\thtmlFor=\"first_name\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tFirst Name:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"first_name\"\n\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tvalue={reservation.first_name}\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\tplaceholder=\"Enter guest's first name...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t\thtmlFor=\"last_name\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tLast Name:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"last_name\"\n\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tvalue={reservation.last_name}\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\tplaceholder=\"Enter guest's last name...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t\thtmlFor=\"mobile_number\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tPhone number:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tid=\"mobile_number\"\n\t\t\t\t\t\tname=\"mobile_number\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tvalue={reservation.mobile_number}\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\tplaceholder=\"123-456-7890\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t\thtmlFor=\"reservation_date\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tReservation date:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tid=\"reservation_date\"\n\t\t\t\t\t\tname=\"reservation_date\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tvalue={reservation.reservation_date}\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\tplaceholder=\"YYYY-MM-DD\"\n\t\t\t\t\t\tpattern=\"\\d{4}-\\d{2}-\\d{2}\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t\thtmlFor=\"reservation_time\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tReservation time:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\tid=\"reservation_time\"\n\t\t\t\t\t\tname=\"reservation_time\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tvalue={reservation.reservation_time}\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\tplaceholder=\"HH:MM\"\n\t\t\t\t\t\tpattern=\"[0-9]{2}:[0-9]{2}\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t\thtmlFor=\"people\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tNumber of guests:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tid=\"people\"\n\t\t\t\t\t\tname=\"people\"\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tvalue={reservation.people}\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\tplaceholder={1}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"btn btn-primary\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\t\tonClick={cancelHandler}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</main>\n\t);\n};\n\nexport default ReservationForm;","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n//import utility functions\nimport { createReservation } from \"../utils/api\";\nimport { formatAsDate } from \"../utils/date-time\";\n\n//import components\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport ReservationForm from \"./ReservationForm\";\n\nconst ReservationCreate = () => {\n\tconst history = useHistory();\n\n\tconst initialFormState = {\n\t\tfirst_name: \"\",\n\t\tlast_name: \"\",\n\t\tmobile_number: \"\",\n\t\treservation_date: \"\",\n\t\treservation_time: \"\",\n\t\tpeople: \"\",\n\t};\n\n\tconst [reservation, setReservation] = useState({ ...initialFormState });\n\tconst [error, setError] = useState(null);\n\n\tconst cancelHandler = () => {\n\t\thistory.goBack();\n\t};\n\n\tconst submitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tsetError(null);\n\n\t\tconst abortController = new AbortController();\n\t\treservation.people = Number(reservation.people);\n\n\t\ttry {\n\t\t\tconst response = await createReservation(\n\t\t\t\treservation,\n\t\t\t\tabortController.signal,\n\t\t\t);\n\t\t\thistory.push(\n\t\t\t\t`/dashboard?date=${formatAsDate(response.reservation_date)}`,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (error.name !== \"AbortError\") {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t}\n\t\treturn () => abortController.abort();\n\t};\n\n// ...\n\nconst changeHandler = ({ target: { name, value } }) => {\n\tif (name === \"mobile_number\") {\n\t  // Remove any non-digit characters from the input value\n\t  value = value.replace(/\\D/g, \"\");\n\t}\n  \n\tsetReservation((previousReservation) => ({\n\t  ...previousReservation,\n\t  [name]: value,\n\t}));\n  };\n  \n  // ...\n  \n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"mb-3 pt-3\">Create Reservation</h2>\n\t\t\t<ErrorAlert error={error} />\n\t\t\t<ReservationForm\n\t\t\t\treservation={reservation}\n\t\t\t\tsubmitHandler={submitHandler}\n\t\t\t\tchangeHandler={changeHandler}\n\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default ReservationCreate;","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\n\n//import components\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\n//import utility functions\nimport { listTables, seatReservation } from \"../utils/api\";\n\nconst ReservationSeat = () => {\n\tconst { reservation_id } = useParams();\n\tconst history = useHistory();\n\n\tconst [formData, setFormData] = useState(\"\");\n\tconst [tables, setTables] = useState([]);\n\tconst [error, setError] = useState(null);\n\n\t//load tables\n\tuseEffect(() => {\n\t\tconst abortController = new AbortController();\n\t\tsetError(null);\n\t\tlistTables(abortController.signal).then(setTables).catch(setError);\n\t\treturn () => abortController.abort();\n\t}, [reservation_id]);\n\n\tconst submitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tsetError(null);\n\n\t\tconst abortController = new AbortController();\n\n\t\tconst tableId = Number(formData.table_id);\n\t\tconst reservationId = Number(reservation_id);\n\n\t\ttry {\n\t\t\tawait seatReservation(tableId, reservationId, abortController.signal);\n\t\t\thistory.push(\"/\");\n\t\t} catch (error) {\n\t\t\tif (error.name !== \"AbortError\") {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t}\n\t\treturn () => abortController.abort();\n\t};\n\n\tconst changeHandler = ({ target: { name, value } }) => {\n\t\tsetFormData((previousFormData) => ({\n\t\t\t...previousFormData,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<ErrorAlert error={error} />\n\t\t\t</div>\n\t\t\t<div className=\"card mt-3\">\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t\t<h2 className=\"card-title\">\n\t\t\t\t\t\t\tSeat reservation number {reservation_id}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"card-text mb-3\">\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor=\"table_id\"\n\t\t\t\t\t\t\t\tclassName=\"form-label\">\n\t\t\t\t\t\t\t\tTable number:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"table_id\"\n\t\t\t\t\t\t\t\tname=\"table_id\"\n\t\t\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\t\t\tvalue={formData.table_id}\n\t\t\t\t\t\t\t\tclassName=\"form-control\">\n\t\t\t\t\t\t\t\t<option value=\"\">Select a table</option>\n\t\t\t\t\t\t\t\t{tables.map((table) => (\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\tkey={table.table_id}\n\t\t\t\t\t\t\t\t\t\tvalue={table.table_id}>\n\t\t\t\t\t\t\t\t\t\t{table.table_name} - {table.capacity}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary card-link\">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary card-link\"\n\t\t\t\t\t\t\tonClick={() => history.goBack()}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ReservationSeat;","/** @format */\n\nimport React, { useState } from \"react\";\n\n//import utility functions\nimport { searchReservations } from \"../utils/api\";\n\n//import components\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport ReservationsList from \"./ReservationsList\";\n\nconst ReservationSearch = () => {\n\tconst [inputData, setInputData] = useState(\"\");\n\tconst [error, setError] = useState(null);\n\tconst [reservations, setReservations] = useState([]);\n\n\tconst submitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tsetError(null);\n\n\t\tconst abortController = new AbortController();\n\t\ttry {\n\t\t\tconst response = await searchReservations(\n\t\t\t\tinputData,\n\t\t\t\tabortController.signal,\n\t\t\t);\n\n\t\t\tsetReservations(response);\n\t\t\tsetInputData(\"\");\n\t\t} catch (error) {\n\t\t\tif (error.name !== \"AbortError\") {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t}\n\t\treturn () => abortController.abort();\n\t};\n\n\tconst changeHandler = (event) => {\n\t\tconst inputValue = event.target.value;\n\t\n\t\t// Remove any non-digit characters from the input value\n\t\tconst numericValue = inputValue.replace(/\\D/g, \"\");\n\t\n\t\t// Update the input state with the sanitized numeric value\n\t\tsetInputData(numericValue);\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"col form-group\">\n\t\t\t\t<div className=\"row d-md-flex my-3\">\n\t\t\t\t\t<h2>Find reservation</h2>\n\n\t\t\t\t\t<ErrorAlert error={error} />\n\t\t\t\t</div>\n\n\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t<div className=\"row input-group mb-3\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"mobile_number\"\n\t\t\t\t\t\t\tplaceholder=\"Enter a customer's phone number\"\n\t\t\t\t\t\t\taria-label=\"mobile_number\"\n\t\t\t\t\t\t\taria-describedby=\"basic-addon2\"\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\tvalue={inputData}\n\t\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tid=\"basic-addon2\"\n\t\t\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\t\t\tFind\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<div className=\"container-fluid col\">\n\t\t\t\t<div className=\"row d-md-flex mb-3\">\n\t\t\t\t\t<h4>Search Result</h4>\n\t\t\t\t</div>\n\t\t\t\t{reservations.length > 0 ? (\n\t\t\t\t\t<div className=\"row d-md-flex mb-3\">\n\t\t\t\t\t\t<ReservationsList reservations={reservations} />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"row d-md-flex mb-3 alert alert-dark text-center\"\n\t\t\t\t\t\trole=\"alert\">\n\t\t\t\t\t\tNo reservations found\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default ReservationSearch;","import React, {useState, useEffect} from 'react';\nimport { useHistory, useParams } from 'react-router';\n\n//import utility functions\n\nimport { readReservation, updateReservation } from '../utils/api';\nimport {formatAsDate} from '../utils/date-time';\n\n//import components\n\nimport ReservationForm from './ReservationForm';\nimport ErrorAlert from '../layout/ErrorAlert';\n\nconst ReservationEdit = () => {\n\n  const history = useHistory();\n\n  const { reservation_id } = useParams();\n\n  const [reservation, setReservation] = useState({});\n  const [error, setError] = useState(null);\n\n  //load reservation\n  useEffect(() => {\n    setReservation({});\n\n    const abortController = new AbortController();\n     \n    async function loadReservation() {\n     try{\n      const loadedReservation = await readReservation(reservation_id, abortController.signal);\n      setReservation(loadedReservation);\n     }catch(error){\n      if(error.name !== \"AbortError\"){\n        setError(error)\n      }\n     }\n    }\n    loadReservation();\n    return () => abortController.abort();\n  }, [reservation_id]);\n\n\n\n\n  const changeHandler =({target}) =>{\n    if (target.name === \"mobile_number\") {\n      // Remove any non-digit characters from the input value\n      target.value = target.value.replace(/\\D/g, \"\");\n    }\n    setReservation({\n        ...reservation,\n        [target.name]: target.value\n    })\n  };\n\n\nconst submitHandler = async(event) =>{\n    event.preventDefault();\n\n    setError(null);\n\n    const abortController = new AbortController();\n    reservation.people = Number(reservation.people);\n\n    try{\n        const response = await updateReservation(reservation, abortController.signal);\n        history.push(\n          `/dashboard?date=${formatAsDate(response.reservation_date)}`\n        );\n    }\n    catch(error){\n        if (error.name !== \"AbortError\") {\n          setError(error);\n        }\n    }\n    return () => abortController.abort();\n}\n\n\nconst cancelHandler = ()=>{\n    history.goBack();\n}\n\n if(reservation.reservation_id){\n  return (\n    <div>\n      <h2>Edit reservation {reservation.reservation_id}</h2>\n      <ErrorAlert error={error} />\n      <ReservationForm\n        reservation={reservation}\n        changeHandler={changeHandler}\n        submitHandler={submitHandler}\n        cancelHandler={cancelHandler}\n      />\n    </div>\n  );\n }\n return \"Loading...\"\n}\n\nexport default ReservationEdit","/** @format */\n\nimport React from \"react\";\n\nconst TableForm = ({\n\tsubmitHandler,\n\tcancelHandler,\n\tchangeHandler,\n\tformData,\n}) => {\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<h2 className=\"mb-3 pt-3\">Create new table</h2>\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label\n\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\thtmlFor=\"table_name\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tTable name\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tname=\"table_name\"\n\t\t\t\t\tid=\"table_name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\trequired={true}\n\t\t\t\t\tvalue={formData.table_name}\n\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\tplaceholder=\"Table name\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label\n\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\thtmlFor=\"capacity\">\n\t\t\t\t\tCapacity\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tname=\"capacity\"\n\t\t\t\t\tid=\"capacity\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\trequired={true}\n\t\t\t\t\tvalue={formData.capacity}\n\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\tplaceholder=\"1\"\n\t\t\t\t\tmin={1}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"btn btn-primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\tonClick={cancelHandler}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default TableForm;","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\n//import components\nimport TableForm from \"./TableForm\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\n//import utility functions\nimport { createTable } from \"../utils/api\";\n\nconst TableCreate = () => {\n\tconst history = useHistory();\n\n\tconst initialFormState = {\n\t\ttable_name: \"\",\n\t\tcapacity: \"\",\n\t};\n\n\tconst [formData, setFormData] = useState({ ...initialFormState });\n\tconst [error, setError] = useState(null);\n\n\tconst cancelHandler = () => {\n\t\thistory.goBack();\n\t};\n\n\tconst submitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tsetError(null);\n\t\tconst abortController = new AbortController();\n\t\tformData.capacity = Number(formData.capacity);\n\n\t\ttry {\n\t\t\tawait createTable(formData, abortController.signal);\n\t\t\thistory.push(\"/\");\n\t\t} catch (error) {\n\t\t\tsetError(error);\n\t\t}\n\t\treturn () => abortController.abort();\n\t};\n\n\tconst changeHandler = ({ target: { name, value } }) => {\n\t\tsetFormData((previousFormData) => ({\n\t\t\t...previousFormData,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\treturn (\n\t\t<main>\n\t\t\t<ErrorAlert error={error} />\n\t\t\t<TableForm\n\t\t\t\tsubmitHandler={submitHandler}\n\t\t\t\tcancelHandler={cancelHandler}\n\t\t\t\tformData={formData}\n\t\t\t\tchangeHandler={changeHandler}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nexport default TableCreate;","/** @format */\n\nimport React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n\treturn (\n\t\t<div className=\"NotFound\">\n\t\t\t<h1>Not Found</h1>\n\t\t</div>\n\t);\n}\n\nexport default NotFound;","/** @format */\n\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\n//import components\nimport Dashboard from \"../dashboard/Dashboard\";\nimport ReservationCreate from \"../reservations/ReservationCreate\";\nimport ReservationSeat from \"../reservations/ReservationSeat\";\nimport ReservationSearch from \"../reservations/ReservationSearch\";\nimport ReservationEdit from \"../reservations/ReservationEdit\";\nimport TableCreate from \"../tables/TableCreate\";\nimport NotFound from \"./NotFound\";\n\n//import utility functions\nimport { today } from \"../utils/date-time\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route\n\t\t\t\texact={true}\n\t\t\t\tpath=\"/\">\n\t\t\t\t<Redirect to={\"/dashboard\"} />\n\t\t\t</Route>\n\t\t\t<Route\n\t\t\t\texact={true}\n\t\t\t\tpath=\"/reservations\">\n\t\t\t\t<Redirect to={\"/dashboard\"} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/dashboard\">\n\t\t\t\t<Dashboard date={today()} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/reservations/new\">\n\t\t\t\t<ReservationCreate />\n\t\t\t</Route>\n\t\t\t<Route path=\"/reservations/:reservation_id/edit\">\n\t\t\t\t<ReservationEdit />\n\t\t\t</Route>\n\t\t\t<Route path=\"/reservations/:reservation_id/seat\">\n\t\t\t\t<ReservationSeat />\n\t\t\t</Route>\n\t\t\t<Route path=\"/tables/new\">\n\t\t\t\t<TableCreate />\n\t\t\t</Route>\n\t\t\t<Route path=\"/search\">\n\t\t\t\t<ReservationSearch />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n}\n\nexport default Routes;","/** @format */\n\nimport React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<div\n\t\t\t\tclassName=\"row h-100\"\n\t\t\t\tid=\"navbar\">\n\t\t\t\t<div className=\"col-md-2 side-bar\">\n\t\t\t\t\t<Menu />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t<Routes />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row h-10\">\n            <div className=\"container\">\n\t\t\t<div className=\"col justify-content-between py-3 my-4 border-top\">\n\t\t\t\t<p className=\"row mb-0 text-muted\">\n\t\t\t\t\t<a href=\"#top\">Back to top</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Layout;","/** @format */\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<Layout />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}